name: CI/CD Deploy Logistiq

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies (for validation)
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            #!/bin/bash
            set -e

            # ===============================
            # ConfiguraÃ§Ãµes do projeto
            # ===============================
            PROJECT_DIR="/home/logistiq/LogistiQ"
            VENV_DIR="$PROJECT_DIR/venv"

            # Comandos sudo permitidos sem senha
            SUDO_CMDS=("systemctl restart logistiq" "systemctl restart nginx")

            # ===============================
            # Garantir permissÃµes corretas
            # ===============================
            echo "ðŸ”¹ Ajustando permissÃµes do diretÃ³rio do projeto..."
            sudo chown -R logistiq:logistiq $PROJECT_DIR

            # ===============================
            # Atualizar cÃ³digo Git
            # ===============================
            echo "ðŸ”¹ Atualizando repositÃ³rio Git..."
            cd $PROJECT_DIR
            git config --global --add safe.directory $PROJECT_DIR
            git reset --hard
            git pull origin main

            # ===============================
            # Criar virtualenv se nÃ£o existir
            # ===============================
            if [ ! -d "$VENV_DIR" ]; then
                echo "ðŸ”¹ Criando virtualenv..."
                python3 -m venv $VENV_DIR
            fi

            # ===============================
            # Ativar virtualenv e instalar dependÃªncias
            # ===============================
            echo "ðŸ”¹ Ativando virtualenv e instalando dependÃªncias..."
            source $VENV_DIR/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # ===============================
            # Reiniciar serviÃ§os
            # ===============================
            echo "ðŸ”¹ Reiniciando serviÃ§os..."
            for cmd in "${SUDO_CMDS[@]}"; do
                sudo $cmd
            done

            echo "âœ… Deploy concluÃ­do com sucesso!"